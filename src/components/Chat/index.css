.container{
    position: fixed;
    top: 100px;
    right: 100px;
    width: 400px;
    margin: auto;
    background-color: #fff;
    display: flex;
    flex-direction: column;
    padding-bottom: 20px;
    z-index: 30000;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
}
.container :global(.emoji-mart-search){
    display: none;
}
.container:global(.emoji-mart-preview){
    display: none;
}
.closeIcon{
    width: 20px;
    height: auto;
  cursor: pointer;
}
.header{
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-top: 15px;
    margin-bottom: 0px;
    margin-left: 15px;
    margin-right: 15px;
}
.chatIcon{
    width: 36px;
    height: auto;
}
.chatTitle{
    font-weight: bold;
    font-size: 18px;
    font-family: 'RobotoBold';
    margin-left: 10px;
    text-align: center;
  font-weight: bold;
  margin-bottom:10px;
}
.messageBox{
    padding-left: 14px;
    padding-right: 14px;
    padding-top: 17px;
    background-color: #F5F5F5;
    height: 400px;
    overflow-y: scroll;
    margin-left:0px;
    margin-right: 0px;
}
.emojiBox{
    display: flex;
    align-items: center;
    margin-top: 10px;
    margin-left: 29px;
    position: relative;
}
.xiaolianIcon{
width: 30px;
height: auto;
cursor: pointer;
}
.folderIcon{
 width: 21px;
 height: auto;
 margin-left: 29px;
 cursor: pointer;
}
.sendBox{
  display: flex;
  justify-content: space-between;
  margin-top: 20px;
}
.inputContainer{
  position: relative;
  width:250px;
}


.chatTextarea{
  position: absolute;
  left:0;
  top:0;
  width:100%;
  font-size: 16px;
  border: none;
  color: #C5C5C5;
  margin-top: 0px;
  resize: none;
  font-family: 'RubikRegular';
  overflow-y: hidden;
  appearance: none;
  height: 100%;
  padding-left: 29px;
}
.hidden {
  word-break: break-word;
  width: 100%;
  padding-left: 29px;
  overflow-y: hidden;
  font-family: 'RobotoRegular';
  margin-top: 0px;
  border: none;
  font-size: 16px;
}
.chatBtnWrapper{
    display: flex;
    justify-content: flex-end;
    align-items: center;
  position: relative;
}
.sendBtn{
  padding: 5px 20px;
  margin-left: 5px;
    margin-right: 24px;
    cursor: pointer;
  line-height: 1;
  margin-top: 10px;
  font-size: 30px;
}
.sendBtnIcon {
  height: 30px;
  width: auto;
}
.activeBtn{
  position: relative;
}
.assistantBox{
  display: flex;
  margin-bottom: 10px;
  margin-top: 10px;
  align-items: flex-start;
}
.avatar{
  width: 36px;
  height: 36px;
  border-radius: 18px;
  margin-right: 15px;
}
.assistantMsg{
  background-color: #fff;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  font-size: 16px;
  line-height: 1.2;
  margin-bottom: 0;
  padding: 15px;
  max-width: 90%;
  word-break: break-word;
}
.assistantName{
  line-height: 43px;
  font-size: 14px;
  font-weight: 700;
  font-weight: bold;
  margin-bottom: 0;
}
.userBox{
  display: flex;
  justify-content: flex-end;
  align-items: center;
}
.userMsg{
  background-color: #9EEA6A;
  border-radius: 4px;
  font-size: 16px;
  line-height: 1.2;
  padding: 15px;
  margin-bottom: 0;
  max-width: 90%;
  -ms-word-break: break-word;
  word-break: break-word;
}
button {
  --top: 50%;
  --left: 50%;
  --size: 100%;
  --background: hsl(265, 100%, 50%);
  --color: hsl(265, 100%, 100%);
  /* :p */
  --border: none;
  color: var(--color);
  background: var(--background);
  border: 1px solid var(--border);
  font-family: inherit;
  font-size: 30px;
  border-radius: 3px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 1px;
  /* overflow and position matching the pseudo elements */
  overflow: hidden;
  position: relative;
  /* remove the default outline
! substituted with the pseudo elements
*/
  outline: none;
}
/* if existing, separate the inline icon from the text which follows */
button svg {
  width: 1em;
  height: auto;
  display: inline-block;
  margin: auto;
}

/* with a pseudo element add a semitransparent layer with the same color of the text */
button:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: currentColor;
  border-radius: inherit;
  opacity: 0;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
button:focus:before,
button:hover:before {
  opacity: 0.1;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

/* with another pseudo element add a semitransparent layer clipped to be a circle */
button:after {
  content: "";
  position: absolute;
  top: var(--top);
  left: var(--left);
  transform: translate(-50%, -50%);
  width: var(--size);
  height: var(--size);
  background: currentColor;
  clip-path: circle(0%);
  opacity: 0.3;
  border-radius: inherit;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
/*
! add the transition only as the active state is "enabled"
! add a negative delay for the clip to already start from a small circle
! add a delay for the opacity to follow the clip-path
*/
button:active:after {
  clip-path: circle(100%);
  opacity: 0;
  transition: clip-path 0.3s cubic-bezier(0.55, 0.085, 0.68, 0.53), opacity 0.3s ease-in-out;
  transition-delay: -0.1s, 0.5s;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
